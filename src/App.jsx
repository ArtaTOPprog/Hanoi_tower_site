import { useState } from 'react'
import reactLogo from './assets/react.svg'
import viteLogo from '/vite.svg'
import './App.css'

function App() {
  const [count, setCount] = useState(0)
  const codeRec = `
        #include <stdio.h>

        int move(int i, int m, int n) {
            int s = 0;
            if (i == 1) {
                printf("\\n%d > %d", m, n);
            } else {
                s = 6 - m - n;
                move(i - 1, m, s);
                printf("\\n%d > %d", m, n);
                move(i - 1, s, n);
            }
            return 0;
        }

        int main() {
            int dsc, n, k;
            printf("Number of disks:");
            scanf("%d", &dsc);
            printf("Starting tower:");
            scanf("%d", &n);
            printf("Ending tower:");
            scanf("%d", &k);
            move(dsc, n, k);
            return 0;
        }`;

  const codeIter = `
        #include <stdio.h>
        #include <math.h>

        int fd(int m) {
            int i = 0;
            int deg2value = 1;
            while ((m % deg2value) == 0) {
                i++;
                deg2value *= 2;
            }
            return i;
        }

        int nqmove(int m, int i) {
            int deg2value = (int)pow(2, i - 1);
            int nm = m / deg2value;
            if (nm % 2 == 0) {
                nm--;
            }
            nm = (nm + 1) / 2;
            return nm;
        }

        int postow(int step, int cyclet, int n, int s, int k) {
            int pos = step % 3;
    
            if (cyclet == 1) {
                if (pos == 0) return n;
                else if (pos == 1) return k;
                else return s;
            } else {
                if (pos == 0) return n;
                else if (pos == 1) return s;
                else return k;
            }
        }

        int main() {
            int dsc, k, n, allmoves, s; 
            printf("Number of disks:");
            scanf("%d", &dsc);
            allmoves = (int)pow(2, dsc) - 1;  
            printf("Starting tower:");
            scanf("%d", &n);
            printf("Ending tower:");
            scanf("%d", &k);
            s = 6-n-k; 
            for (int m = 1; m <= allmoves; m++) {
                int i = fd(m); 
                int nm = nqmove(m, i); 
                int cyclet;
                if (dsc % 2 == 1) {
                    if (i % 2 == 1){
                        cyclet = 1;
                    }
                    else {
                        cyclet = 2;
                    }
                } else {
                    if (i % 2 == 1){
                        cyclet = 2;
                    }
                    else {
                        cyclet = 1;
                    }
                }
                int from = postow(nm - 1, cyclet, n, s, k);
                int to = postow(nm, cyclet, n, s, k);
                printf("%d > %d", from, to);
            }
            return 0;
        }

  `

  return (
    <>
      <div className="app">
        <header className="header">
          <h1 className="title">üèØ –•–∞–Ω–æ–π—Å–∫–∞—è –±–∞—à–Ω—è</h1>
          <p className="subtitle">–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ –∏ –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å –ø–æ—è—Å–Ω–µ–Ω–∏–µ–º</p>
        </header>

        <section className="code-section fade-in">
          <h2 className="code-title">üåÄ –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥</h2>
          <pre className="code-block">
            <code>{codeRec}</code>
          </pre>

          <div className="explanation fade-in delay">
            <h3>üìò –û–±—ä—è—Å–Ω–µ–Ω–∏–µ:</h3>
            <p>
              –†–µ—à–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ <b>—Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏</b>:
            </p>
            <ul>
              <li>–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å <b>n-1 –¥–∏—Å–∫–æ–≤</b> —Å –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å—Ç–µ—Ä–∂–Ω—è –Ω–∞ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π.</li>
              <li>–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å <b>–Ω–∏–∂–Ω–∏–π –¥–∏—Å–∫</b> —Å –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å—Ç–µ—Ä–∂–Ω—è –Ω–∞ —Ü–µ–ª–µ–≤–æ–π.</li>
              <li>–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å <b>n-1 –¥–∏—Å–∫–æ–≤</b> —Å –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ç–µ—Ä–∂–Ω—è –Ω–∞ —Ü–µ–ª–µ–≤–æ–π.</li>
            </ul>

            <p><b>–õ–æ–≥–∏–∫–∞ —Ä–µ–∫—É—Ä—Å–∏–∏:</b></p>
            <ul>
              <li><b>–ë–∞–∑–æ–≤—ã–π —Å–ª—É—á–∞–π:</b> –ï—Å–ª–∏ <code>i == 1</code> ‚Äî –¥–∏—Å–∫ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é —Å <code>m</code> –Ω–∞ <code>n</code>.</li>
              <li><b>–†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π —Å–ª—É—á–∞–π:</b></li>
              <ul>
                <li><code>s = 6 - m - n</code> ‚Äî –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ç–µ—Ä–∂–Ω—è (—Ç–∞–∫ –∫–∞–∫ 1 + 2 + 3 = 6).</li>
                <li><code>move(i - 1, m, s)</code> ‚Äî –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ <b>i - 1</b> –¥–∏—Å–∫–æ–≤ –Ω–∞ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Å—Ç–µ—Ä–∂–µ–Ω—å.</li>
                <li>–í—ã–≤–æ–¥ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –Ω–∏–∂–Ω–µ–≥–æ –¥–∏—Å–∫–∞ —Å <code>m</code> –Ω–∞ <code>n</code>.</li>
                <li><code>move(i - 1, s, n)</code> ‚Äî –ø–µ—Ä–µ–Ω–æ—Å <b>i - 1</b> –¥–∏—Å–∫–æ–≤ —Å –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ç–µ—Ä–∂–Ω—è –Ω–∞ —Ü–µ–ª–µ–≤–æ–π.</li>
              </ul>
            </ul>
          </div>
        </section>

        <section className="code-section fade-in delay">
          <h2 className="code-title">‚öôÔ∏è –ò—Ç–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥</h2>
          <pre className="code-block">
            <code>{codeIter}</code>
          </pre>

          <div className="explanation fade-in delay">
            <h3>üìó –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞:</h3>
            <p>
              –î–∞–Ω–Ω—ã–π –∫–æ–¥ —Ä–µ–∞–ª–∏–∑—É–µ—Ç <b>–∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ</b> –∑–∞–¥–∞—á–∏ –•–∞–Ω–æ–π—Å–∫–∏—Ö –±–∞—à–µ–Ω,
              –æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç—è—Ö –∏ –∞–Ω–∞–ª–∏–∑–µ –¥–≤–æ–∏—á–Ω—ã—Ö —á–∏—Å–µ–ª.
            </p>

            <p>
              –í–º–µ—Å—Ç–æ —Ä–µ–∫—É—Ä—Å–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è <b>–∫–æ–¥ –ì—Ä–µ—è</b> –∏ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
              –¥–∏—Å–∫–æ–≤ –º–µ–∂–¥—É –±–∞—à–Ω—è–º–∏.
            </p>

            <h4>üîπ –§—É–Ω–∫—Ü–∏—è <code>fd(int m)</code></h4>
            <p>–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–æ–π –¥–∏—Å–∫ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –Ω–∞ —Ö–æ–¥–µ <code>m</code>.</p>

            <table className="table">
              <thead>
                <tr><th>m</th><th>–î–≤–æ–∏—á–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ</th><th>–ü–µ—Ä–µ–º–µ—â–∞–µ–º—ã–π –¥–∏—Å–∫</th></tr>
              </thead>
              <tbody>
                <tr><td>1</td><td>0001</td><td>1</td></tr>
                <tr><td>2</td><td>0010</td><td>2</td></tr>
                <tr><td>3</td><td>0011</td><td>1</td></tr>
                <tr><td>4</td><td>0100</td><td>3</td></tr>
                <tr><td>5</td><td>0101</td><td>1</td></tr>
                <tr><td>6</td><td>0110</td><td>2</td></tr>
              </tbody>
            </table>

            <h4>üîπ –§—É–Ω–∫—Ü–∏—è <code>nqmove(int m, int i)</code></h4>
            <p>–í—ã—á–∏—Å–ª—è–µ—Ç, –∫–∞–∫–æ–π –ø–æ —Å—á—ë—Ç—É —ç—Ç–æ —Ö–æ–¥ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –¥–∏—Å–∫–∞ <code>i</code>.</p>
            <ul>
              <li>–î–∏—Å–∫ 1 –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –Ω–µ—á—ë—Ç–Ω—ã–π —Ö–æ–¥.</li>
              <li>–î–∏—Å–∫ 2 ‚Äî –Ω–∞ —Ö–æ–¥–∞—Ö, –∫—Ä–∞—Ç–Ω—ã—Ö 2.</li>
              <li>–î–∏—Å–∫ 3 ‚Äî –Ω–∞ —Ö–æ–¥–∞—Ö, –∫—Ä–∞—Ç–Ω—ã—Ö 4.</li>
              <li>–î–∏—Å–∫ i ‚Äî –Ω–∞ —Ö–æ–¥–∞—Ö, –∫—Ä–∞—Ç–Ω—ã—Ö <code>2^(i-1)</code>.</li>
            </ul>

            <p>
              –ü—Ä–∏–º–µ—Ä: <code>m = 6</code>, <code>i = 2</code> ‚Üí <b>nm = 2</b>.
            </p>

            <h4>üîπ –§—É–Ω–∫—Ü–∏—è <code>postow(int step, int cyclet, int n, int s, int k)</code></h4>
            <p>
              –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–µ–∫—É—â–µ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–∏—Å–∫–∞ –∏ –ø—Ä–æ—Å—á–∏—Ç—ã–≤–∞–µ—Ç –µ–≥–æ —Å–ª–µ–¥—É—é—â–µ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ.
            </p>
            <p>
              –ü—Ä–∏ –Ω–µ—á—ë—Ç–Ω–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –¥–∏—Å–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ü–∏–∫–ª <b>n ‚Üí k ‚Üí s ‚Üí n</b>,
              –ø—Ä–∏ —á—ë—Ç–Ω–æ–º ‚Äî <b>n ‚Üí s ‚Üí k ‚Üí n</b>.
            </p>
          </div>
        </section>

        <footer className="footer">
          <p>‚ú® –°–æ–∑–¥–∞–Ω–æ —Å –ª—é–±–æ–≤—å—é –∏ –≤ –ø–æ–º–æ—â—å –≤–∞–º ‚ù§Ô∏è</p>
        </footer>
      </div>
    </>
  )
}

export default App
